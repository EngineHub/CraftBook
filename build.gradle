println """
*******************************************
 You are building CraftBook! 
 If you encounter trouble:
 1) Read CONTRIBUTING.md if you haven't yet
 2) Try running 'build' in a separate Gradle run
 3) Use gradlew and not gradle
 4) If you still need help, ask on IRC! irc.esper.net #sk89q
 Output files will be in [subproject]/build/libs
*******************************************
"""
buildscript {
    repositories {
        mavenCentral()
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }

    configurations.all {
        resolutionStrategy {
            force 'com.google.guava:guava:21.0'
        }
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.3"
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.7.5'
        classpath 'org.ajoberstar:gradle-git:1.7.2'
    }
}

if (!project.hasProperty("artifactory_contextUrl")) ext.artifactory_contextUrl = "http://localhost"
if (!project.hasProperty("artifactory_user")) ext.artifactory_user = "guest"
if (!project.hasProperty("artifactory_password")) ext.artifactory_password = ""

if (!project.hasProperty("gitCommitHash")) {
    try {
        def repo = org.ajoberstar.grgit.Grgit.open(project.file('.'))
        ext.gitCommitHash = repo.head().abbreviatedId
    } catch (Exception e) {
        ext.gitCommitHash = "no_git_id"
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'com.jfrog.artifactory'

    group = pluginGroup
    version = pluginVersion
    ext.internalVersion = version + ";" + gitCommitHash

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name = 'spigotmc-repo'
            url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        }
        maven {
            name = 'sk89q-repo'
            url = 'http://maven.sk89q.com/repo/'
        }
        maven {
            name = 'md_5-rep'
            url = 'http://repo.md-5.net/content/repositories/releases/'
        }
        maven {
            name = 'Vault Repo'
            url = 'http://nexus.hc.to/content/repositories/pub_releases/'
        }
		maven {
            name = 'Gravity Repo'
            url = 'http://repo.gravitydevelopment.net/'
        }
		maven {
            name = 'Dmulloy2 Repo'
            url = 'http://repo.dmulloy2.net/content/groups/public/'
        }
        maven {
            name = 'Destroystokyo Repo'
            url = 'https://repo.destroystokyo.com/repository/maven-public/'
        }
        maven {
			name = 'bstats repo'
            url = 'https://repo.codemc.org/repository/maven-public'
		}
    }

    dependencies {
        compile 'com.destroystokyo.paper:paper-api:1.13.2-R0.1-SNAPSHOT'
        compile 'com.sk89q.worldedit:worldedit-core:7.0.0-SNAPSHOT'
        compile 'com.sk89q.worldedit:worldedit-bukkit:7.0.0-SNAPSHOT'
        compile 'com.sk89q.worldguard:worldguard-core:7.0.0-SNAPSHOT'
        compile 'com.sk89q.worldguard:worldguard-legacy:7.0.0-SNAPSHOT'
        compile "io.papermc:paperlib:1.0.2"
        compile 'com.sk89q:squirrelid:0.1.0'
        compile 'net.milkbowl.vault:VaultAPI:1.6'
        compile 'com.comphenix.protocol:ProtocolLib-API:4.4.0-SNAPSHOT'
        compile 'fr.neatmonster:nocheatplus:3.15.1-RC'
		compile 'org.bstats:bstats-bukkit:1.4'
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.6.1'
        testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.1'
    }

    if (JavaVersion.current().isJava8Compatible()) {
        // Java 8 turns on doclint which we fail
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives shadowJar
        archives sourcesJar
        archives javadocJar
    }

    build.dependsOn(sourcesJar)
    build.dependsOn(javadocJar)

    jar {
        manifest {
            attributes("Class-Path": "CraftBook/WorldEdit.jar lib/WorldEdit.jar ../lib/WorldEdit.jar ../WorldEdit.jar",
                    "WorldEdit-Version": version)
        }
    }

    shadowJar {
        classifier 'dist'
        dependencies {
            include(dependency('io.papermc:paperlib'))
            include(dependency('com.sk89q:squirrelid'))
			relocate ("org.bstats", "com.sk89q.craftbook.bukkit.bstats") {
				include(dependency("org.bstats:bstats-bukkit:1.4"))
			}
        }
        relocate 'com.sk89q.squirrelid', 'com.sk89q.craftbook.util.profile'
        relocate 'io.papermc.lib', 'com.sk89q.craftbook.bukkit.paperlib'
        exclude 'GradleStart**'
        exclude '.cache'
        exclude 'LICENSE*'
    }

    artifactory {
        contextUrl = "${artifactory_contextUrl}"
        publish {
            repository {
                repoKey = project.version.contains("SNAPSHOT") ? 'libs-snapshot-local' : 'libs-release-local'
                username = "${artifactory_user}"
                password = "${artifactory_password}"
                maven = true

            }
        }

        resolve {
            repository {
                repoKey = 'repo'
                username = "${artifactory_user}"
                password = "${artifactory_password}"
                maven = true
            }
        }
    }

    processResources {
        from (sourceSets.main.resources.srcDirs) {
            expand 'internalVersion': project.internalVersion
            include 'plugin.yml'
        }

        from (sourceSets.main.resources.srcDirs) {
            exclude 'plugin.yml'
        }
    }
}